[{"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\index.js":"1","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\App.js":"2","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\components\\Posts.js":"3","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\components\\Form.js":"4","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\styling\\styles.js":"5","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\styling\\formStyles.js":"6","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\styling\\postsStyles.js":"7","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\redux\\reducers\\index.js":"8","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\redux\\reducers\\postsReducer.js":"9","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\redux\\constants\\postsConstants.js":"10","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\redux\\actions\\postsActions.js":"11","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\utils\\fetchPosts.js":"12","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\components\\Post.js":"13","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\styling\\postStyles.js":"14","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\utils\\hashtag.js":"15","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\components\\Navbar.js":"16","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\styling\\navStyles.js":"17","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\components\\Home.js":"18","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\components\\Authentication.js":"19"},{"size":485,"mtime":1611929269560,"results":"20","hashOfConfig":"21"},{"size":714,"mtime":1613568898595,"results":"22","hashOfConfig":"21"},{"size":924,"mtime":1612270614337,"results":"23","hashOfConfig":"21"},{"size":3017,"mtime":1612516177956,"results":"24","hashOfConfig":"21"},{"size":535,"mtime":1613477047505,"results":"25","hashOfConfig":"21"},{"size":683,"mtime":1612190047111,"results":"26","hashOfConfig":"21"},{"size":306,"mtime":1611662101538,"results":"27","hashOfConfig":"21"},{"size":123,"mtime":1611934299786,"results":"28","hashOfConfig":"21"},{"size":598,"mtime":1612809188838,"results":"29","hashOfConfig":"21"},{"size":165,"mtime":1612809180259,"results":"30","hashOfConfig":"21"},{"size":1329,"mtime":1612809625830,"results":"31","hashOfConfig":"21"},{"size":415,"mtime":1612808973704,"results":"32","hashOfConfig":"21"},{"size":2532,"mtime":1613475053755,"results":"33","hashOfConfig":"21"},{"size":1435,"mtime":1612816364822,"results":"34","hashOfConfig":"21"},{"size":518,"mtime":1612813731564,"results":"35","hashOfConfig":"21"},{"size":1697,"mtime":1613568194717,"results":"36","hashOfConfig":"21"},{"size":1061,"mtime":1613564978599,"results":"37","hashOfConfig":"21"},{"size":1218,"mtime":1613568593600,"results":"38","hashOfConfig":"21"},{"size":176,"mtime":1613568777797,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"t13tje",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\index.js",[],["81","82"],"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\App.js",[],"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\components\\Posts.js",["83"],"import React from 'react'\r\nimport useStyles from '../styling/postsStyles'\r\nimport Post from './Post';\r\nimport { Grid, CircularProgress } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\n\r\nconst Posts = ({ setCurrentId }) => {\r\n    const classes = useStyles();\r\n    const posts = useSelector((state) => state.posts);\r\n\r\n    const circularProgress = {\r\n        color: '#fff'\r\n    }\r\n\r\n    return (\r\n        !posts.length ? <CircularProgress color=\"secondary\" /> :\r\n            <Grid className={classes.mainContainer} container alignItems=\"stretch\" spacing={3}>\r\n                {\r\n                    posts.map((post) => (\r\n                        <Grid key={post._id} item xs={12} sm={6}>\r\n                            <Post post={post} setCurrentId={setCurrentId} />\r\n                        </Grid>\r\n                    ))\r\n                }\r\n            </Grid>\r\n    )\r\n}\r\n\r\nexport default Posts\r\n","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\components\\Form.js",[],"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\styling\\styles.js",[],"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\styling\\formStyles.js",[],"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\styling\\postsStyles.js",[],"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\redux\\reducers\\index.js",[],"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\redux\\reducers\\postsReducer.js",[],"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\redux\\constants\\postsConstants.js",[],"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\redux\\actions\\postsActions.js",[],"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\utils\\fetchPosts.js",[],"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\components\\Post.js",["84"],"import React from 'react'\r\nimport useStyles from '../styling/postStyles';\r\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core';\r\nimport moment from 'moment';\r\nimport ThumbUp from '@material-ui/icons/ThumbUpAlt';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport StarsIcon from '@material-ui/icons/Stars';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deletePost, likePost } from '../redux/actions/postsActions';\r\nimport hashtag from '../utils/hashtag'\r\n\r\nconst Post = ({ post, setCurrentId }) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardMedia className={classes.media} image={post.selectedFile} title={post.title} />\r\n            <div className={classes.overlay}>\r\n                <Typography variant=\"h6\">{post.creator}</Typography>\r\n                <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\r\n            </div>\r\n            <div className={classes.overlay2}>\r\n                <Button style={{ color: '#5FDC77' }} size=\"small\" onClick={() => setCurrentId(post._id)}>\r\n                    <MoreHorizIcon fontSize=\"default\" />\r\n                </Button>\r\n            </div>\r\n            <div className={classes.details}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">{hashtag(post.tags)}</Typography>\r\n            </div>\r\n            <Typography className={classes.title} variant=\"h5\" gutterBottom>{post.title}</Typography>\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\" >{post.message}</Typography>\r\n            </CardContent>\r\n            <CardActions className={classes.cardActions}>\r\n                <Button size=\"small\" className={classes.like} onClick={() => dispatch(likePost(post._id))} >\r\n\r\n                    <StarsIcon fontSize=\"large\" className={classes.likeIcon} />\r\n                    &nbsp;\r\n                    {post.likeCount !== 1 ? `  ${post.likeCount} Stars` : ` ${post.likeCount} Star`}\r\n                </Button>\r\n                <Button size=\"small\" className={classes.delete} onClick={() => dispatch(deletePost(post._id))}>\r\n\r\n                    <DeleteForeverIcon fontSize=\"large\" />\r\n                    remove\r\n                    &nbsp;\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\styling\\postStyles.js",[],"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\utils\\hashtag.js",[],"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\components\\Navbar.js",[],"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\styling\\navStyles.js",[],"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\components\\Home.js",[],"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\components\\Authentication.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":13,"column":11,"nodeType":"91","messageId":"92","endLine":13,"endColumn":27},{"ruleId":"89","severity":1,"message":"93","line":5,"column":8,"nodeType":"91","messageId":"92","endLine":5,"endColumn":15},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'circularProgress' is assigned a value but never used.","Identifier","unusedVar","'ThumbUp' is defined but never used.","no-global-assign","no-unsafe-negation"]