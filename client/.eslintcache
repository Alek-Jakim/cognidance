[{"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\index.js":"1","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\App.js":"2","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\components\\Posts.js":"3","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\components\\Form.js":"4","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\styling\\styles.js":"5","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\styling\\formStyles.js":"6","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\styling\\postsStyles.js":"7","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\redux\\reducers\\index.js":"8","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\redux\\reducers\\postsReducer.js":"9","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\redux\\constants\\postsConstants.js":"10","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\redux\\actions\\postsActions.js":"11","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\utils\\fetchPosts.js":"12","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\components\\Post.js":"13","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\styling\\postStyles.js":"14","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\utils\\hashtag.js":"15","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\components\\Navbar.js":"16","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\styling\\navStyles.js":"17","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\components\\Home.js":"18","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\components\\Authentication.js":"19","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\styling\\authStyles.js":"20","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\components\\Input.js":"21","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\components\\Icon.js":"22","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\redux\\reducers\\auth.js":"23","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\redux\\actions\\authActions.js":"24"},{"size":485,"mtime":1611929269560,"results":"25","hashOfConfig":"26"},{"size":714,"mtime":1613568898595,"results":"27","hashOfConfig":"26"},{"size":860,"mtime":1614608589456,"results":"28","hashOfConfig":"26"},{"size":3017,"mtime":1612516177956,"results":"29","hashOfConfig":"26"},{"size":535,"mtime":1613477047505,"results":"30","hashOfConfig":"26"},{"size":683,"mtime":1612190047111,"results":"31","hashOfConfig":"26"},{"size":306,"mtime":1611662101538,"results":"32","hashOfConfig":"26"},{"size":157,"mtime":1614607263286,"results":"33","hashOfConfig":"26"},{"size":598,"mtime":1612809188838,"results":"34","hashOfConfig":"26"},{"size":229,"mtime":1614607097863,"results":"35","hashOfConfig":"26"},{"size":1329,"mtime":1612809625830,"results":"36","hashOfConfig":"26"},{"size":583,"mtime":1615412016488,"results":"37","hashOfConfig":"26"},{"size":2547,"mtime":1614608927121,"results":"38","hashOfConfig":"26"},{"size":1435,"mtime":1612816364822,"results":"39","hashOfConfig":"26"},{"size":518,"mtime":1612813731564,"results":"40","hashOfConfig":"26"},{"size":2270,"mtime":1614608538825,"results":"41","hashOfConfig":"26"},{"size":1061,"mtime":1613564978599,"results":"42","hashOfConfig":"26"},{"size":1218,"mtime":1613568593600,"results":"43","hashOfConfig":"26"},{"size":4791,"mtime":1614688137573,"results":"44","hashOfConfig":"26"},{"size":755,"mtime":1614344081254,"results":"45","hashOfConfig":"26"},{"size":1120,"mtime":1614606562774,"results":"46","hashOfConfig":"26"},{"size":536,"mtime":1614343989122,"results":"47","hashOfConfig":"26"},{"size":544,"mtime":1614608321441,"results":"48","hashOfConfig":"26"},{"size":657,"mtime":1615412870939,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"t13tje",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\index.js",[],["101","102"],"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\App.js",[],"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\components\\Posts.js",[],"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\components\\Form.js",[],"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\styling\\styles.js",[],"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\styling\\formStyles.js",[],"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\styling\\postsStyles.js",[],"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\redux\\reducers\\index.js",[],"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\redux\\reducers\\postsReducer.js",[],"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\redux\\constants\\postsConstants.js",[],"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\redux\\actions\\postsActions.js",[],"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\utils\\fetchPosts.js",[],"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\components\\Post.js",["103","104"],"import React, { useEffect } from 'react'\r\nimport useStyles from '../styling/postStyles';\r\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core';\r\nimport moment from 'moment';\r\nimport ThumbUp from '@material-ui/icons/ThumbUpAlt';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport StarsIcon from '@material-ui/icons/Stars';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deletePost, likePost } from '../redux/actions/postsActions';\r\nimport hashtag from '../utils/hashtag'\r\n\r\nconst Post = ({ post, setCurrentId }) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardMedia className={classes.media} image={post.selectedFile} title={post.title} />\r\n            <div className={classes.overlay}>\r\n                <Typography variant=\"h6\">{post.creator}</Typography>\r\n                <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\r\n            </div>\r\n            <div className={classes.overlay2}>\r\n                <Button style={{ color: '#5FDC77' }} size=\"small\" onClick={() => setCurrentId(post._id)}>\r\n                    <MoreHorizIcon fontSize=\"default\" />\r\n                </Button>\r\n            </div>\r\n            <div className={classes.details}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">{hashtag(post.tags)}</Typography>\r\n            </div>\r\n            <Typography className={classes.title} variant=\"h5\" gutterBottom>{post.title}</Typography>\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\" >{post.message}</Typography>\r\n            </CardContent>\r\n            <CardActions className={classes.cardActions}>\r\n                <Button size=\"small\" className={classes.like} onClick={() => dispatch(likePost(post._id))} >\r\n\r\n                    <StarsIcon fontSize=\"large\" className={classes.likeIcon} />\r\n                    &nbsp;\r\n                    {post.likeCount !== 1 ? `  ${post.likeCount} Stars` : ` ${post.likeCount} Star`}\r\n                </Button>\r\n                <Button size=\"small\" className={classes.delete} onClick={() => dispatch(deletePost(post._id))}>\r\n\r\n                    <DeleteForeverIcon fontSize=\"large\" />\r\n                    remove\r\n                    &nbsp;\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\styling\\postStyles.js",[],"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\utils\\hashtag.js",[],"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\components\\Navbar.js",["105","106"],"import React, { useState, useEffect } from 'react'\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core';\r\nimport useStyles from '../styling/navStyles';\r\nimport memories from '../images/memories.png'\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst Navbar = () => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n    const dispatch = useDispatch();\r\n\r\n    const logout = () => {\r\n        dispatch({ type: 'LOGOUT' })\r\n\r\n        history.push('/');\r\n\r\n        setUser(null);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const token = user?.token;\r\n\r\n        //JWT...\r\n        setUser(JSON.parse(localStorage.getItem('profile')))\r\n    }, [location])\r\n\r\n    return (\r\n        <>\r\n            <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n                <div className={classes.brandContainer}>\r\n\r\n                    <img className={classes.image} src={memories} alt=\"memories\" height=\"60\" />\r\n                    <Typography className={classes.heading} variant=\"h2\" align=\"center\">Echoes</Typography>\r\n                </div>\r\n                <Toolbar className={classes.toolbar}>\r\n                    {user ? (\r\n                        <div className={classes.profile}>\r\n                            <Avatar className={classes.purple} alt={user.result.name} src={user.result.imageUrl}>{user.result.name.charAt(0)}</Avatar>\r\n                            <Typography className={classes.userName} variant=\"h6\">\r\n                                {user.result.name}\r\n                            </Typography>\r\n                            <Button variant=\"contained\" className={classes.logout} color=\"secondary\" onClick={logout}>Sign Out</Button>\r\n                        </div>\r\n                    ) : (\r\n                            <Button component={Link} to=\"/auth\" variant=\"contained\" color=\"primary\">\r\n                                Sign In\r\n                            </Button>\r\n                        )}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\styling\\navStyles.js",[],"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\components\\Home.js",[],"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\components\\Authentication.js",[],"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\styling\\authStyles.js",[],"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\components\\Input.js",[],"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\components\\Icon.js",[],"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\redux\\reducers\\auth.js",[],"C:\\Users\\Alex\\Desktop\\MERN Projects\\cognidance\\client\\src\\redux\\actions\\authActions.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"111","severity":1,"message":"115","line":5,"column":8,"nodeType":"113","messageId":"114","endLine":5,"endColumn":15},{"ruleId":"111","severity":1,"message":"116","line":25,"column":15,"nodeType":"113","messageId":"114","endLine":25,"endColumn":20},{"ruleId":"117","severity":1,"message":"118","line":29,"column":8,"nodeType":"119","endLine":29,"endColumn":18,"suggestions":"120"},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'ThumbUp' is defined but never used.","'token' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user?.token'. Either include it or remove the dependency array.","ArrayExpression",["123"],"no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},"Update the dependencies array to be: [location, user?.token]",{"range":"126","text":"127"},[875,885],"[location, user?.token]"]